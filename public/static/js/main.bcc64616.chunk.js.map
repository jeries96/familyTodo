{"version":3,"sources":["view/components/Task/checked.svg","view/components/Task/delete.svg","view/components/Register/Register.js","view/components/Login/Login.js","view/components/Task/Task.js","view/components/ToDo/ToDo.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","Register","props","history","useHistory","className","onSubmit","e","preventDefault","console","log","target","elements","email","userEmail","value","firstname","firstName","lastname","lastName","img","imgUrl","password","fetch","method","body","JSON","stringify","headers","then","res","json","data","push","type","placeholder","name","id","Login","validAdmin","localStorage","setItem","to","href","Task","elem","_id","tasks","map","task","taskTitle","src","checked","Delete","ToDo","useState","userList","setUserlist","useEffect","getItem","index","key","App","path","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"iGAAAA,EAAOC,QAAU,IAA0B,qC,gBCA3CD,EAAOC,QAAU,IAA0B,oC,2PC4D5BC,MAlDf,SAAkBC,GACd,IAAIC,EAAUC,cACd,OACI,yBAAKC,UAAU,QACX,0BAAMA,UAAU,OAAOC,SAkB/B,SAAsBC,GAClBA,EAAEC,iBACFC,QAAQC,IAAIH,EAAEI,OAAOC,UACrB,IAAMC,EAAQN,EAAEI,OAAOC,SAASE,UAAUC,MACpCC,EAAYT,EAAEI,OAAOC,SAASK,UAAUF,MACxCG,EAAWX,EAAEI,OAAOC,SAASO,SAASJ,MACtCK,EAAMb,EAAEI,OAAOC,SAASS,OAAON,MAC/BO,EAAWf,EAAEI,OAAOC,SAASU,SAASP,MAC5CQ,MAAM,YAAa,CACfC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEd,QAAOG,YAAWE,WAAUE,MAAKE,aACxDM,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFvB,QAAQC,IAAIsB,MAGpBvB,QAAQC,IAAI,iBACZP,EAAQ8B,KAAK,OAtCT,wBAAI5B,UAAU,UAAd,cAEI,2BAAO6B,KAAK,OAAOC,YAAY,QAAQC,KAAK,cAC5C,6BACA,2BAAOF,KAAK,OAAOC,YAAY,aAAaC,KAAK,cACjD,6BACA,2BAAOF,KAAK,OAAOC,YAAY,YAAYC,KAAK,aAChD,6BACA,2BAAOF,KAAK,OAAOC,YAAY,UAAUC,KAAK,WAC9C,6BACA,2BAAOF,KAAK,OAAOC,YAAY,WAAWC,KAAK,aAC/C,6BACA,2BAAOF,KAAK,SAASnB,MAAM,WAAWsB,GAAG,c,aCjBlD,SAASC,EAAMpC,GAClB,IAAIC,EAAUC,cACd,OAEI,yBAAKC,UAAU,sBACX,yBAAKgC,GAAG,eACJ,wBAAIhC,UAAU,SAASgC,GAAG,UAA1B,aACA,0BAAM/B,SAiBlB,SAAqBC,GACjBA,EAAEC,iBAEF,IAAMK,EAAQN,EAAEI,OAAOC,SAASC,MAAME,MAChCG,EAAWX,EAAEI,OAAOC,SAASO,SAASJ,MACtCO,EAAWf,EAAEI,OAAOC,SAASU,SAASP,MAE5CQ,MAAM,cAAe,CACjBC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEd,QAAOK,WAAUI,aACxCM,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFvB,QAAQC,IAAIsB,GADF,IAEFO,EAAmBP,EAAnBO,WAAYF,EAAOL,EAAPK,GACpBG,aAAaC,QAAQ,SAAUJ,GAC/BG,aAAaC,QAAQ,WAAYvB,GAGf,GAAdqB,IACApC,EAAQ8B,KAAK,SACbxB,QAAQC,IAAI,iBAxCZ,2BAAOwB,KAAK,OAAOG,GAAG,QAAQhC,UAAU,eAAe+B,KAAK,QAAQD,YAAY,WAChF,2BAAOD,KAAK,OAAOG,GAAG,QAAQhC,UAAU,eAAe+B,KAAK,WAAWD,YAAY,aACnF,2BAAOD,KAAK,WAAWG,GAAG,WAAWhC,UAAU,cAAc+B,KAAK,WAAWD,YAAY,aACzF,2BAAOD,KAAK,SAAUG,GAAG,MAAKhC,UAAU,gBAAgBU,MAAM,YAIlE,yBAAKsB,GAAG,cACJ,kBAAC,IAAD,CAAMK,GAAG,aAAY,uBAAGrC,UAAU,iBAAiBsC,KAAK,KAAnC,gB,4DC4B1BC,MAzCf,SAAc1C,GACIE,cAAd,IACQyC,EAAS3C,EAAT2C,KAER,OADApC,QAAQC,IAAImC,GAER,yBAAKR,GAAG,WAEJ,yBAAKA,GAAG,QAAQQ,EAAKC,KACrB,yBAAKzC,UAAU,eAEX,yBAAKgC,GAAG,UAEAQ,EAAKE,MAAMC,KAAI,SAACC,GACZ,OACI,yBAAKZ,GAAG,SACJ,6BAAMY,EAAKC,WACX,yBAAKb,GAAG,UACJ,yBAAKc,IAAKC,MACV,yBAAKD,IAAKE,eCmBnCC,MA7Cf,SAAcpD,GAAQ,IAAD,EACeqD,mBAAS,IADxB,mBACVC,EADU,KACAC,EADA,KAsBjB,OAnBAC,qBAAU,WACNjD,QAAQC,IAAI,MACZ,IAAI2B,EAAKG,aAAamB,QAAQ,UAC1BxC,EAAWqB,aAAamB,QAAQ,YACpClD,QAAQC,IAAI2B,EAAIlB,GAChBI,MAAM,QAAS,CACXC,OAAQ,OACRC,KAAMC,KAAKC,UAAU,CAAEU,KAAIlB,aAC3BS,QAAS,CACL,eAAgB,sBAGnBC,MAAK,SAAAC,GAAG,OAAIA,EAAIC,UAChBF,MAAK,SAAAG,GACFvB,QAAQC,IAAIsB,GACZyB,EAAYzB,QAGrB,IAGC,yBAAKK,GAAG,WACJ,yBAAKhC,UAAU,UAEX,yBAAKA,UAAU,QAAf,SAGA,yBAAKgC,GAAG,SAEAmB,EAASR,KAAI,SAACH,EAAKe,GACf,OAAQ,kBAAC,EAAD,CAAMC,IAAKD,EAAOf,KAAQA,UCK/CiB,MA/Bf,WAIE,OACE,kBAAC,IAAD,KAGG,kBAAC,IAAD,KAEC,kBAAC,IAAD,CAAOC,KAAK,YACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,SACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,eACV,kBAAC,EAAD,OAEF,kBAAC,IAAD,CAAOA,KAAK,KACV,kBAAC,EAAD,UCpBUC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OACP,kBAAC,IAAMC,WAAP,KACE,kBAAC,EAAD,OAEFC,SAASC,eAAe,SDyHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrB/C,MAAK,SAAAgD,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLvE,QAAQuE,MAAMA,EAAMC,c","file":"static/js/main.bcc64616.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/checked.b7fe0c52.svg\";","module.exports = __webpack_public_path__ + \"static/media/delete.1e2a80a4.svg\";","import React, { useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useHistory\n} from \"react-router-dom\";\nimport './Register.css';\n\nfunction Register(props) {\n    let history = useHistory()\n    return (\n        <div className='root'>\n            <form className='form' onSubmit={handleSubmit}>\n            <h2 className=\"active\"> Register </h2>\n\n                <input type='text' placeholder='Email' name='userEmail'></input>\n                <br />\n                <input type='text' placeholder='First Name' name='firstName'></input>\n                <br />\n                <input type='text' placeholder='Last Name' name='lastName'></input>\n                <br />\n                <input type='text' placeholder='Pic URL' name='imgUrl'></input>\n                <br />\n                <input type='text' placeholder='Password' name='password'></input>\n                <br />\n                <input type='submit' value=\"Register\" id='button'></input>\n            </form>\n        </div>\n    );\n\n    function handleSubmit(e) {\n        e.preventDefault()\n        console.log(e.target.elements)\n        const email = e.target.elements.userEmail.value;\n        const firstname = e.target.elements.firstName.value;\n        const lastname = e.target.elements.lastName.value;\n        const img = e.target.elements.imgUrl.value;\n        const password = e.target.elements.password.value;\n        fetch('/register', {\n            method: 'POST',\n            body: JSON.stringify({ email, firstname, lastname, img, password }),\n            headers: {\n                \"Content-Type\": \"application/json\"\n            }\n        })\n            .then(res => res.json())\n            .then(data => {\n                console.log(data)\n            })\n\n        console.log(\"cats are here\")\n        history.push('/')\n    }\n\n}\n\n\n\nexport default Register;\n\n","import React, { useState } from 'react';\r\nimport {\r\n    BrowserRouter as Router,\r\n    Switch,\r\n    Route,\r\n    Link,\r\n    useHistory\r\n} from \"react-router-dom\";\r\nimport './Login.css';\r\n\r\nexport function Login(props) {\r\n    let history = useHistory()\r\n    return (\r\n\r\n        <div className=\"wrapper fadeInDown\">\r\n            <div id=\"formContent\">\r\n                <h2 className=\"active\" id=\"signIn\"> Sign In </h2>\r\n                <form onSubmit={handleLogin}>\r\n                    <input type=\"text\" id=\"login\" className=\"fadeInsecond\" name=\"email\" placeholder=\"@Email\" />\r\n                    <input type=\"text\" id=\"login\" className=\"fadeInsecond\" name=\"lastName\" placeholder=\"Lastname\" />\r\n                    <input type=\"password\" id=\"password\" className=\"fadeInthird\" name=\"password\" placeholder=\"password\" />\r\n                    <input type=\"submit\"  id=\"hey\"className=\"fadeIn fourth\" value=\"Log In\"></input>\r\n                </form>\r\n\r\n\r\n                <div id=\"formFooter\">\r\n                    <Link to=\"/Register\"><a className=\"underlineHover\" href=\"#\">Register</a></Link>\r\n                </div>\r\n\r\n            </div>\r\n        </div>\r\n\r\n    );\r\n\r\n    function handleLogin(e) {\r\n        e.preventDefault();\r\n\r\n        const email = e.target.elements.email.value;\r\n        const lastname = e.target.elements.lastName.value;\r\n        const password = e.target.elements.password.value;\r\n\r\n        fetch('/login-user', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ email, lastname, password }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                const { validAdmin, id } = data;\r\n                localStorage.setItem('UserID', id);\r\n                localStorage.setItem('lastName', lastname);\r\n\r\n\r\n                if (validAdmin == true) {\r\n                    history.push('/todo')\r\n                    console.log('Arrived')\r\n                }\r\n                if (validAdmin == false) {\r\n                    // document.getElementById('root').innerText = `Wrong username/password`\r\n                    // document.getElementById('root').style.color = \"red\";\r\n\r\n                }\r\n\r\n            })\r\n    }\r\n}\r\n","import React, { useState } from 'react';\nimport {\n    BrowserRouter as Router,\n    Switch,\n    Route,\n    Link,\n    useHistory\n} from \"react-router-dom\";\nimport './Task.css';\nimport checked from './checked.svg'\nimport Delete from './delete.svg';\n\n\nfunction Task(props) {\n    let history = useHistory()\n    const { elem } = props\n    console.log(elem)\n    return (\n        <div id=\"wrapper\">\n\n            <div id=\"user\">{elem._id}</div>\n            <div className=\"taskwrapper\">\n                {/* <div id=\"user\">{elem._id}</div> */}\n                <div id=\"titles\">\n                    {\n                        elem.tasks.map((task) => {\n                            return (\n                                <div id=\"flexx\">\n                                    <div>{task.taskTitle}</div>\n                                    <div id=\"option\">\n                                        <img src={checked} />\n                                        <img src={Delete} />\n                                    </div>\n                                </div>\n\n                            )\n                        })\n                    }\n                </div>\n\n            </div>\n\n\n\n        </div>\n    );\n\n   \n\n\n}\n\n\n\nexport default Task;\n\n","import React, { useState, useEffect } from 'react';\r\n\r\nimport './ToDo.css';\r\nimport Task from '../Task/Task'\r\n\r\nfunction ToDo(props) {\r\n    const [userList, setUserlist] = useState([])\r\n\r\n    useEffect(() => {\r\n        console.log('go')\r\n        let id = localStorage.getItem('UserID');\r\n        let lastName = localStorage.getItem('lastName');\r\n        console.log(id, lastName)\r\n        fetch('/ToDo', {\r\n            method: 'POST',\r\n            body: JSON.stringify({ id, lastName }),\r\n            headers: {\r\n                \"Content-Type\": \"application/json\"\r\n            }\r\n        })\r\n            .then(res => res.json())\r\n            .then(data => {\r\n                console.log(data)\r\n                setUserlist(data)\r\n\r\n            });\r\n    }, [])\r\n    return (\r\n\r\n        <div id=\"wrapper\">\r\n            <div className=\"header\">\r\n\r\n                <div className=\"logo\">ToDo</div>\r\n        </div>\r\n                \r\n                <div id=\"tasks\">\r\n                    {\r\n                        userList.map((elem,index) => {\r\n                            return (<Task key={index} elem = {elem}/>);\r\n                        })\r\n                    }\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\n\r\n\r\nexport default ToDo;","import React, { useState } from 'react';\nimport './App.css';\nimport Register from './view/components/Register/Register'\nimport { Login } from './view/components/Login/Login'\nimport ToDo from './view/components/ToDo/ToDo'\nimport OneTask from '../src/view/components/Task/Task'\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Link\n} from \"react-router-dom\";\nfunction App() {\n\n  /*const [registerInfo,setRegisterInfo] = useState([])*/\n\n  return (\n    <Router>\n    \n\n      {<Switch>\n\n        <Route path=\"/oneTask\">\n          <OneTask />\n        </Route>\n        <Route path=\"/todo\">\n          <ToDo />\n        </Route>\n        <Route path=\"/#/Register\">\n          <Register />\n        </Route>\n        <Route path=\"/\">\n          <Login />\n        </Route>\n\n      </Switch>}\n\n    </Router>\n  )\n}\n\n\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}